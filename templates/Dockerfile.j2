################################################################################
# This Dockerfile was generated from the template at templates/Dockerfile.j2
#
# Beginning of multi stage Dockerfile
################################################################################

{% set ingest_plugins = 'ingest-user-agent ingest-geoip' %}
{% set version_tag = elastic_version -%}

{% if image_flavor == 'oss' -%}
{%   set tarball = 'elasticsearch-oss-%s.tar.gz' % elastic_version -%}
{%   set tarball_dir = 'distribution/archives/oss-tar/build/distributions' -%}
{% else -%}
{%   set tarball = 'elasticsearch-%s.tar.gz' % elastic_version -%}
{%   set tarball_dir = 'distribution/archives/tar/build/distributions' -%}
{% endif -%}

{% if artifacts_dir -%}
{%   set url_root = 'http://elasticsearch-docker-artifact-server:8000/elasticsearch/%s' % tarball_dir -%}
{%   set plugin_url_root = 'http://elasticsearch-docker-artifact-server:8000/elasticsearch/plugins' -%}
{% elif staging_build_num -%}
{%   set version_tag = version_tag + '-' + staging_build_num -%}
{%   set url_root = 'https://staging.elastic.co/%s/downloads/elasticsearch' % version_tag -%}
{% elif elastic_version.endswith('-SNAPSHOT') -%}
{%   set url_root = 'https://snapshots.elastic.co/downloads/elasticsearch' -%}
{% else -%}
{%   set url_root = 'https://artifacts.elastic.co/downloads/elasticsearch' -%}
{% endif -%}

################################################################################
# Build stage 0 `prep_es_files`:
# Extract elasticsearch artifact
# Install required plugins
# Set gid=0 and make group perms==owner perms
################################################################################

FROM centos:7 AS prep_es_files

ENV PATH /usr/share/elasticsearch/bin:$PATH
RUN curl -s https://download.java.net/java/GA/jdk11/13/GPL/openjdk-11.0.1_linux-x64_bin.tar.gz | tar -C /opt -zxf -
ENV JAVA_HOME /opt/jdk-11.0.1

RUN groupadd -g 1000 elasticsearch && \
    adduser -u 1000 -g 1000 -d /usr/share/elasticsearch elasticsearch

WORKDIR /usr/share/elasticsearch

USER 1000

# Download and extract defined ES version.
RUN curl -fsSL {{ url_root }}/{{ tarball }} | \
    tar zx --strip-components=1

RUN set -ex && for esdirs in config data logs; do \
        mkdir -p "$esdirs"; \
    done

# Install the ingest-{agent,geoip} modules required for Filebeat
{% if artifacts_dir -%}
RUN for PLUGIN in {{ ingest_plugins }}; do \
      elasticsearch-plugin install --batch "{{ plugin_url_root }}/$PLUGIN/build/distributions/$PLUGIN-{{ elastic_version }}.zip"; \
    done
{% elif staging_build_num -%}
RUN for PLUGIN in {{ ingest_plugins }}; do \
      eval ES_JAVA_OPTS="-Des.plugins.staging={{ staging_build_num }}" elasticsearch-plugin install --batch "$PLUGIN"; \
    done
{% else -%}
RUN for PLUGIN in {{ ingest_plugins }}; do \
      elasticsearch-plugin install --batch "$PLUGIN"; done
{%- endif %}

COPY --chown=1000:0 elasticsearch.yml log4j2.properties config/

USER 0

# Set gid to 0 for elasticsearch and make group permission similar to that of user
# This is needed, for example, for Openshift Open: https://docs.openshift.org/latest/creating_images/guidelines.html
# and allows ES to run with an uid
RUN chown -R elasticsearch:0 . && \
    chmod -R g=u /usr/share/elasticsearch

################################################################################
# Build stage 1 (the actual elasticsearch image):
# Copy elasticsearch from stage 0
# Add entrypoint
################################################################################

FROM centos:7

ENV ELASTIC_CONTAINER true

RUN curl -s https://download.java.net/java/GA/jdk11/13/GPL/openjdk-11.0.1_linux-x64_bin.tar.gz | tar -C /opt -zxf -
ENV JAVA_HOME /opt/jdk-11.0.1

# Replace OpenJDK's built-in CA certificate keystore with the one from the OS
# vendor. The latter is superior in several ways.
# REF: https://github.com/elastic/elasticsearch-docker/issues/171
RUN ln -sf /etc/pki/ca-trust/extracted/java/cacerts /opt/jdk-11.0.1/lib/security/cacerts

RUN yum update -y && \
    yum install -y nc unzip wget which && \
    yum clean all

RUN groupadd -g 1000 elasticsearch && \
    adduser -u 1000 -g 1000 -G 0 -d /usr/share/elasticsearch elasticsearch && \
    chmod 0775 /usr/share/elasticsearch && \
    chgrp 0 /usr/share/elasticsearch

WORKDIR /usr/share/elasticsearch
COPY --from=prep_es_files --chown=1000:0 /usr/share/elasticsearch /usr/share/elasticsearch
ENV PATH /usr/share/elasticsearch/bin:$PATH

COPY --chown=1000:0 bin/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh

# Openshift overrides USER and uses ones with randomly uid>1024 and gid=0
# Allow ENTRYPOINT (and ES) to run even with a different user
RUN chgrp 0 /usr/local/bin/docker-entrypoint.sh && \
    chmod g=u /etc/passwd && \
    chmod 0775 /usr/local/bin/docker-entrypoint.sh

EXPOSE 9200 9300

LABEL org.label-schema.schema-version="1.0" \
  org.label-schema.vendor="Elastic" \
  org.label-schema.name="elasticsearch" \
  org.label-schema.version="{{ elastic_version }}" \
  org.label-schema.url="https://www.elastic.co/products/elasticsearch" \
  org.label-schema.vcs-url="https://github.com/elastic/elasticsearch-docker" \
{% if image_flavor == 'oss' -%}
  license="Apache-2.0"
{% else -%}
  license="Elastic License"
{% endif -%}

ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
# Dummy overridable parameter parsed by entrypoint
CMD ["eswrapper"]

################################################################################
# End of multi-stage Dockerfile
################################################################################
